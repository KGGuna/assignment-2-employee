mysql> use day6;
Database changed
mysql> CREATE TABLE Employees (
    ->     emp_id INT PRIMARY KEY,
    ->     name VARCHAR(50),
    ->     department_id INT,
    ->     salary INT
    -> );
Query OK, 0 rows affected (0.10 sec)

mysql> INSERT INTO Employees (emp_id, name, department_id, salary) VALUES
    -> (1, 'Alice', 101, 60000),
    -> (2, 'Bob', 102, 55000),
    -> (3, 'Charlie', 101, 70000),
    -> (4, 'David', 103, 48000),
    -> (5, 'Eve', NULL, 75000),
    -> (6, 'Frank', 104, 52000),
    -> (7, 'Grace', 102, 58000),
    -> (8, 'Hannah', NULL, 62000);
Query OK, 8 rows affected (0.04 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> select * from Employees;
+--------+---------+---------------+--------+
| emp_id | name    | department_id | salary |
+--------+---------+---------------+--------+
|      1 | Alice   |           101 |  60000 |
|      2 | Bob     |           102 |  55000 |
|      3 | Charlie |           101 |  70000 |
|      4 | David   |           103 |  48000 |
|      5 | Eve     |          NULL |  75000 |
|      6 | Frank   |           104 |  52000 |
|      7 | Grace   |           102 |  58000 |
|      8 | Hannah  |          NULL |  62000 |
+--------+---------+---------------+--------+
8 rows in set (0.01 sec)

mysql> SELECT e.name AS employee_name, d.department_name
    -> FROM Employees e
    -> INNER JOIN Departments d ON e.department_id = d.department_id;
ERROR 1146 (42S02): Table 'day6.departments' doesn't exist
mysql> CREATE TABLE Departments (
    ->     department_id INT PRIMARY KEY,
    ->     department_name VARCHAR(50),
    ->     location VARCHAR(50)
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> INSERT INTO Departments (department_id, department_name, location) VALUES
    -> (101, 'HR', 'New York'),
    -> (102, 'IT', 'San Francisco'),
    -> (103, 'Finance', 'Chicago'),
    -> (104, 'Sales', 'Boston'),
    -> (105, 'Marketing', 'Los Angeles');
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> select * from Departments;
+---------------+-----------------+---------------+
| department_id | department_name | location      |
+---------------+-----------------+---------------+
|           101 | HR              | New York      |
|           102 | IT              | San Francisco |
|           103 | Finance         | Chicago       |
|           104 | Sales           | Boston        |
|           105 | Marketing       | Los Angeles   |
+---------------+-----------------+---------------+
5 rows in set (0.00 sec)

mysql> SELECT e.name AS employee_name, d.department_name
    -> FROM Employees e
    -> INNER JOIN Departments d ON e.department_id = d.department_id;
+---------------+-----------------+
| employee_name | department_name |
+---------------+-----------------+
| Alice         | HR              |
| Bob           | IT              |
| Charlie       | HR              |
| David         | Finance         |
| Frank         | Sales           |
| Grace         | IT              |
+---------------+-----------------+
6 rows in set (0.01 sec)

mysql> SELECT e.name
    -> FROM Employees e
    -> INNER JOIN Departments d ON e.department_id = d.department_id
    -> WHERE d.department_name = 'IT';
+-------+
| name  |
+-------+
| Bob   |
| Grace |
+-------+
2 rows in set (0.01 sec)

mysql> SELECT DISTINCT d.department_name, d.location
    -> FROM Departments d
    -> INNER JOIN Employees e ON d.department_id = e.department_id;
+-----------------+---------------+
| department_name | location      |
+-----------------+---------------+
| HR              | New York      |
| IT              | San Francisco |
| Finance         | Chicago       |
| Sales           | Boston        |
+-----------------+---------------+
4 rows in set (0.01 sec)

mysql> SELECT e.name
    -> FROM Employees e
    -> INNER JOIN Departments d ON e.department_id = d.department_id
    -> WHERE d.location = (
    ->     SELECT location FROM Departments WHERE department_name = 'HR'
    -> );
+---------+
| name    |
+---------+
| Alice   |
| Charlie |
+---------+
2 rows in set (0.01 sec)

mysql> SELECT d.department_name, COUNT(e.emp_id) AS employee_count
    -> FROM Departments d
    -> INNER JOIN Employees e ON d.department_id = e.department_id
    -> GROUP BY d.department_name;
+-----------------+----------------+
| department_name | employee_count |
+-----------------+----------------+
| HR              |              2 |
| IT              |              2 |
| Finance         |              1 |
| Sales           |              1 |
+-----------------+----------------+
4 rows in set (0.01 sec)

mysql> SELECT e.name AS employee_name, d.department_name
    -> FROM Employees e
    -> LEFT JOIN Departments d ON e.department_id = d.department_id;
+---------------+-----------------+
| employee_name | department_name |
+---------------+-----------------+
| Alice         | HR              |
| Bob           | IT              |
| Charlie       | HR              |
| David         | Finance         |
| Eve           | NULL            |
| Frank         | Sales           |
| Grace         | IT              |
| Hannah        | NULL            |
+---------------+-----------------+
8 rows in set (0.00 sec)

mysql> SELECT e.name
    -> FROM Employees e
    -> LEFT JOIN Departments d ON e.department_id = d.department_id
    -> WHERE d.department_id IS NULL;
+--------+
| name   |
+--------+
| Eve    |
| Hannah |
+--------+
2 rows in set (0.00 sec)

mysql> SELECT d.department_name, e.name AS employee_name
    -> FROM Departments d
    -> LEFT JOIN Employees e ON d.department_id = e.department_id;
+-----------------+---------------+
| department_name | employee_name |
+-----------------+---------------+
| HR              | Charlie       |
| HR              | Alice         |
| IT              | Grace         |
| IT              | Bob           |
| Finance         | David         |
| Sales           | Frank         |
| Marketing       | NULL          |
+-----------------+---------------+
7 rows in set (0.00 sec)

mysql> SELECT
    ->     e.name AS employee_name,
    ->     COALESCE(d.department_name, 'Unassigned') AS department_name
    -> FROM Employees e
    -> LEFT JOIN Departments d ON e.department_id = d.department_id;
+---------------+-----------------+
| employee_name | department_name |
+---------------+-----------------+
| Alice         | HR              |
| Bob           | IT              |
| Charlie       | HR              |
| David         | Finance         |
| Eve           | Unassigned      |
| Frank         | Sales           |
| Grace         | IT              |
| Hannah        | Unassigned      |
+---------------+-----------------+
8 rows in set (0.01 sec)

mysql> SELECT d.department_name
    -> FROM Departments d
    -> LEFT JOIN Employees e ON d.department_id = e.department_id
    -> WHERE e.emp_id IS NULL;
+-----------------+
| department_name |
+-----------------+
| Marketing       |
+-----------------+
1 row in set (0.00 sec)

mysql> SELECT d.department_name, e.name AS employee_name
    -> FROM Departments d
    -> LEFT JOIN Employees e ON d.department_id = e.department_id;
+-----------------+---------------+
| department_name | employee_name |
+-----------------+---------------+
| HR              | Charlie       |
| HR              | Alice         |
| IT              | Grace         |
| IT              | Bob           |
| Finance         | David         |
| Sales           | Frank         |
| Marketing       | NULL          |
+-----------------+---------------+
7 rows in set (0.00 sec)

mysql> SELECT d.department_name, e.name AS employee_name
    -> FROM Employees e
    -> RIGHT JOIN Departments d ON e.department_id = d.department_id;
+-----------------+---------------+
| department_name | employee_name |
+-----------------+---------------+
| HR              | Charlie       |
| HR              | Alice         |
| IT              | Grace         |
| IT              | Bob           |
| Finance         | David         |
| Sales           | Frank         |
| Marketing       | NULL          |
+-----------------+---------------+
7 rows in set (0.00 sec)

mysql> SELECT e.name AS employee_name, d.location
    -> FROM Employees e
    -> LEFT JOIN Departments d ON e.department_id = d.department_id;
+---------------+---------------+
| employee_name | location      |
+---------------+---------------+
| Alice         | New York      |
| Bob           | San Francisco |
| Charlie       | New York      |
| David         | Chicago       |
| Eve           | NULL          |
| Frank         | Boston        |
| Grace         | San Francisco |
| Hannah        | NULL          |
+---------------+---------------+
8 rows in set (0.00 sec)

mysql> -- Using RIGHT JOIN (if supported):
mysql> SELECT d.department_name, e.name AS employee_name
    -> FROM Employees e
    -> RIGHT JOIN Departments d ON e.department_id = d.department_id;
+-----------------+---------------+
| department_name | employee_name |
+-----------------+---------------+
| HR              | Charlie       |
| HR              | Alice         |
| IT              | Grace         |
| IT              | Bob           |
| Finance         | David         |
| Sales           | Frank         |
| Marketing       | NULL          |
+-----------------+---------------+
7 rows in set (0.09 sec)

mysql>
mysql> -- Or equivalent LEFT JOIN:
mysql> SELECT d.department_name, e.name AS employee_name
    -> FROM Departments d
    -> LEFT JOIN Employees e ON d.department_id = e.department_id;
+-----------------+---------------+
| department_name | employee_name |
+-----------------+---------------+
| HR              | Charlie       |
| HR              | Alice         |
| IT              | Grace         |
| IT              | Bob           |
| Finance         | David         |
| Sales           | Frank         |
| Marketing       | NULL          |
+-----------------+---------------+
7 rows in set (0.00 sec)

mysql> SELECT e.emp_id, e.name, d.department_id, d.department_name
    -> FROM Employees e
    -> LEFT JOIN Departments d ON e.department_id = d.department_id
    ->
    -> UNION
    ->
    -> SELECT e.emp_id, e.name, d.department_id, d.department_name
    -> FROM Employees e
    -> RIGHT JOIN Departments d ON e.department_id = d.department_id;
+--------+---------+---------------+-----------------+
| emp_id | name    | department_id | department_name |
+--------+---------+---------------+-----------------+
|      1 | Alice   |           101 | HR              |
|      2 | Bob     |           102 | IT              |
|      3 | Charlie |           101 | HR              |
|      4 | David   |           103 | Finance         |
|      5 | Eve     |          NULL | NULL            |
|      6 | Frank   |           104 | Sales           |
|      7 | Grace   |           102 | IT              |
|      8 | Hannah  |          NULL | NULL            |
|   NULL | NULL    |           105 | Marketing       |
+--------+---------+---------------+-----------------+
9 rows in set (0.03 sec)

mysql> SELECT e.emp_id, e.name, d.department_id, d.department_name,
    ->        CASE
    ->            WHEN e.emp_id IS NULL THEN 'No Employee'
    ->            WHEN d.department_id IS NULL THEN 'No Department'
    ->            ELSE 'Match'
    ->        END AS match_status
    -> FROM Employees e
    -> FULL OUTER JOIN Departments d ON e.department_id = d.department_id;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FULL OUTER JOIN Departments d ON e.department_id = d.department_id' at line 8
mysql> SELECT e1.name AS employee1, e2.name AS employee2, e1.department_id
    -> FROM Employees e1
    -> JOIN Employees e2 ON e1.department_id = e2.department_id AND e1.emp_id <> e2.emp_id;
+-----------+-----------+---------------+
| employee1 | employee2 | department_id |
+-----------+-----------+---------------+
| Charlie   | Alice     |           101 |
| Grace     | Bob       |           102 |
| Alice     | Charlie   |           101 |
| Bob       | Grace     |           102 |
+-----------+-----------+---------------+
4 rows in set (0.01 sec)

mysql> SELECT e1.name AS employee1, e1.salary AS salary1,
    ->        e2.name AS employee2, e2.salary AS salary2
    -> FROM Employees e1
    -> JOIN Employees e2 ON e1.emp_id <> e2.emp_id
    -> WHERE e1.salary > e2.salary;
+-----------+---------+-----------+---------+
| employee1 | salary1 | employee2 | salary2 |
+-----------+---------+-----------+---------+
| Hannah    |   62000 | Alice     |   60000 |
| Eve       |   75000 | Alice     |   60000 |
| Charlie   |   70000 | Alice     |   60000 |
| Hannah    |   62000 | Bob       |   55000 |
| Grace     |   58000 | Bob       |   55000 |
| Eve       |   75000 | Bob       |   55000 |
| Charlie   |   70000 | Bob       |   55000 |
| Alice     |   60000 | Bob       |   55000 |
| Eve       |   75000 | Charlie   |   70000 |
| Hannah    |   62000 | David     |   48000 |
| Grace     |   58000 | David     |   48000 |
| Frank     |   52000 | David     |   48000 |
| Eve       |   75000 | David     |   48000 |
| Charlie   |   70000 | David     |   48000 |
| Bob       |   55000 | David     |   48000 |
| Alice     |   60000 | David     |   48000 |
| Hannah    |   62000 | Frank     |   52000 |
| Grace     |   58000 | Frank     |   52000 |
| Eve       |   75000 | Frank     |   52000 |
| Charlie   |   70000 | Frank     |   52000 |
| Bob       |   55000 | Frank     |   52000 |
| Alice     |   60000 | Frank     |   52000 |
| Hannah    |   62000 | Grace     |   58000 |
| Eve       |   75000 | Grace     |   58000 |
| Charlie   |   70000 | Grace     |   58000 |
| Alice     |   60000 | Grace     |   58000 |
| Eve       |   75000 | Hannah    |   62000 |
| Charlie   |   70000 | Hannah    |   62000 |
+-----------+---------+-----------+---------+
28 rows in set (0.00 sec)

mysql> SELECT e1.name AS employee_name, e2.name AS highest_paid_in_dept
    -> FROM Employees e1
    -> JOIN Employees e2 ON e1.department_id = e2.department_id
    -> WHERE e2.salary = (
    ->     SELECT MAX(salary)
    ->     FROM Employees
    ->     WHERE department_id = e1.department_id
    -> );
+---------------+----------------------+
| employee_name | highest_paid_in_dept |
+---------------+----------------------+
| Charlie       | Charlie              |
| Alice         | Charlie              |
| David         | David                |
| Frank         | Frank                |
| Grace         | Grace                |
| Bob           | Grace                |
+---------------+----------------------+
6 rows in set (0.01 sec)

mysql> SELECT e.name AS employee_name, d.department_name
    -> FROM Employees e
    -> CROSS JOIN Departments d;
+---------------+-----------------+
| employee_name | department_name |
+---------------+-----------------+
| Alice         | Marketing       |
| Alice         | Sales           |
| Alice         | Finance         |
| Alice         | IT              |
| Alice         | HR              |
| Bob           | Marketing       |
| Bob           | Sales           |
| Bob           | Finance         |
| Bob           | IT              |
| Bob           | HR              |
| Charlie       | Marketing       |
| Charlie       | Sales           |
| Charlie       | Finance         |
| Charlie       | IT              |
| Charlie       | HR              |
| David         | Marketing       |
| David         | Sales           |
| David         | Finance         |
| David         | IT              |
| David         | HR              |
| Eve           | Marketing       |
| Eve           | Sales           |
| Eve           | Finance         |
| Eve           | IT              |
| Eve           | HR              |
| Frank         | Marketing       |
| Frank         | Sales           |
| Frank         | Finance         |
| Frank         | IT              |
| Frank         | HR              |
| Grace         | Marketing       |
| Grace         | Sales           |
| Grace         | Finance         |
| Grace         | IT              |
| Grace         | HR              |
| Hannah        | Marketing       |
| Hannah        | Sales           |
| Hannah        | Finance         |
| Hannah        | IT              |
| Hannah        | HR              |
+---------------+-----------------+
40 rows in set (0.00 sec)

mysql> SELECT COUNT(*) AS total_combinations
    -> FROM Employees e
    -> CROSS JOIN Departments d;
+--------------------+
| total_combinations |
+--------------------+
|                 40 |
+--------------------+
1 row in set (0.02 sec)

mysql>
